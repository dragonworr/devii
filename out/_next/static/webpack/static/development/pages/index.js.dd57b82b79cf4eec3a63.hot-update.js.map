{"version":3,"file":"static/webpack/static/development/pages/index.js.dd57b82b79cf4eec3a63.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import Head from 'next/head';\n\nimport { PostData, loadBlogPosts } from '../loader';\nimport { PostCard } from '../components/PostCard';\nimport { generateRSS } from '../rssUtil';\nimport { Markdown } from '../components/Markdown';\n\nconst Home = (props: { readme: string; posts: PostData[] }) => {\n  return (\n    <div style={{ width: '100%', padding: '0px 10vw' }}>\n      <Head>\n        <title>Introducing Devii</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div\n        style={{\n          padding: '50px 0px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <h2>My blog posts</h2>\n          <h6>\n            Any new markdown file under <pre>/md/blog</pre> will automatically\n            appear here.{' '}\n          </h6>\n          {props.posts.map((post, j) => {\n            return <PostCard post={post} key={j} />;\n            // return (\n            //   <a href={`/${post.path}`} target=\"_blank\" key={j}>\n            //     {post.title}\n            //   </a>\n            // );\n            // return <PostCard post={post} key={j} />;\n          })}\n        </div>\n      </div>\n\n      <div\n        style={{\n          maxWidth: '600px',\n          margin: 'auto',\n        }}\n      >\n        <h2>README.md</h2>\n        <h6>Imported and rendered using Next.js dynamic imports ðŸŽ‰</h6>\n        <Markdown source={props.readme} />\n      </div>\n    </div>\n  );\n};\nexport default Home;\n\nexport const getStaticProps = async () => {\n  const readmeFile = await import(`../${'README.md'}`);\n  const readme = readmeFile.default;\n\n  const posts = await loadBlogPosts();\n\n  // comment out to turn off RSS generation\n  // during build step.\n  await generateRSS(posts);\n\n  const props = { readme, posts };\n  return { props };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;AAAA;;;;A","sourceRoot":""}